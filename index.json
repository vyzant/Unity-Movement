{
  "api/Oculus.Movement.Attributes.ConditionalHideAttribute.html": {
    "href": "api/Oculus.Movement.Attributes.ConditionalHideAttribute.html",
    "title": "Class ConditionalHideAttribute | Unity-Movement Documentation",
    "keywords": "Class ConditionalHideAttribute Used on a SerializedField to conditionally hide this field. Class borrowed from the InteractionSDK. Inheritance Object ConditionalHideAttribute Namespace : Oculus.Movement.Attributes Assembly : cs.temp.dll.dll Syntax public class ConditionalHideAttribute : PropertyAttribute Constructors ConditionalHideAttribute(String, Object) ConditionalHideAttribute constructor that expects a field path and hide value to be set. Declaration public ConditionalHideAttribute(string fieldName, object hideValue) Parameters Type Name Description String fieldName Initial value for field path. Object hideValue Initial hide value. Properties ConditionalFieldPath Field path. Declaration public string ConditionalFieldPath { get; } Property Value Type Description String HideValue Field's hide value. Declaration public object HideValue { get; } Property Value Type Description Object"
  },
  "api/Oculus.Movement.Attributes.ConditionalHideDrawer.html": {
    "href": "api/Oculus.Movement.Attributes.ConditionalHideDrawer.html",
    "title": "Class ConditionalHideDrawer | Unity-Movement Documentation",
    "keywords": "Class ConditionalHideDrawer Adds an [ConditionalHide] label in the inspector over any SerializedField with this attribute. Class borrowed from the InteractionSDK. Inheritance Object ConditionalHideDrawer Namespace : Oculus.Movement.Attributes Assembly : cs.temp.dll.dll Syntax public class ConditionalHideDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property GUIContent label Returns Type Description Single OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/Oculus.Movement.Attributes.html": {
    "href": "api/Oculus.Movement.Attributes.html",
    "title": "Namespace Oculus.Movement.Attributes | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Attributes Classes ConditionalHideAttribute Used on a SerializedField to conditionally hide this field. Class borrowed from the InteractionSDK. ConditionalHideDrawer Adds an [ConditionalHide] label in the inspector over any SerializedField with this attribute. Class borrowed from the InteractionSDK. InterfaceAttribute When this attribute is attached to a MonoBehaviour field within a Unity Object, this allows an interface to be specified in to to entire only a specific type of MonoBehaviour can be attached. OptionalAttribute Used on a SerializedField surfaces the expectation that this field can remain empty. Class borrowed from the InteractionSDK. OptionalDrawer Adds an [Optional] label in the inspector over any SerializedField with this attribute. Class borrowed from the InteractionSDK."
  },
  "api/Oculus.Movement.Attributes.InterfaceAttribute.html": {
    "href": "api/Oculus.Movement.Attributes.InterfaceAttribute.html",
    "title": "Class InterfaceAttribute | Unity-Movement Documentation",
    "keywords": "Class InterfaceAttribute When this attribute is attached to a MonoBehaviour field within a Unity Object, this allows an interface to be specified in to to entire only a specific type of MonoBehaviour can be attached. Inheritance Object InterfaceAttribute Namespace : Oculus.Movement.Attributes Assembly : cs.temp.dll.dll Syntax public class InterfaceAttribute : PropertyAttribute Constructors InterfaceAttribute(String) Declaration public InterfaceAttribute(string typeFromFieldName) Parameters Type Name Description String typeFromFieldName InterfaceAttribute(Type, Type[]) Creates a new Interface attribute. Declaration public InterfaceAttribute(Type type, params Type[] types) Parameters Type Name Description Type type The type of interface which is allowed. Type [] types Fields TypeFromFieldName Declaration public string TypeFromFieldName Field Value Type Description String Types Declaration public Type[] Types Field Value Type Description Type []"
  },
  "api/Oculus.Movement.Attributes.OptionalAttribute.html": {
    "href": "api/Oculus.Movement.Attributes.OptionalAttribute.html",
    "title": "Class OptionalAttribute | Unity-Movement Documentation",
    "keywords": "Class OptionalAttribute Used on a SerializedField surfaces the expectation that this field can remain empty. Class borrowed from the InteractionSDK. Inheritance Object OptionalAttribute Namespace : Oculus.Movement.Attributes Assembly : cs.temp.dll.dll Syntax public class OptionalAttribute : PropertyAttribute Constructors OptionalAttribute() Declaration public OptionalAttribute()"
  },
  "api/Oculus.Movement.Attributes.OptionalDrawer.html": {
    "href": "api/Oculus.Movement.Attributes.OptionalDrawer.html",
    "title": "Class OptionalDrawer | Unity-Movement Documentation",
    "keywords": "Class OptionalDrawer Adds an [Optional] label in the inspector over any SerializedField with this attribute. Class borrowed from the InteractionSDK. Inheritance Object OptionalDrawer Namespace : Oculus.Movement.Attributes Assembly : cs.temp.dll.dll Syntax public class OptionalDrawer : DecoratorDrawer Methods GetHeight() Declaration public override float GetHeight() Returns Type Description Single OnGUI(Rect) Declaration public override void OnGUI(Rect position) Parameters Type Name Description Rect position"
  },
  "api/Oculus.Movement.Effects.CompareVectorHashes.html": {
    "href": "api/Oculus.Movement.Effects.CompareVectorHashes.html",
    "title": "Class CompareVectorHashes | Unity-Movement Documentation",
    "keywords": "Class CompareVectorHashes Generates a bunch of vertices that are close to each other. Compares how hash sets consolidate the two. One is based on Unity's generic Vector3 hash function while another is based on a fancier VertexKey structure. Unity's can be found here: https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Math/Vector3.cs#L229 Inheritance Object CompareVectorHashes Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class CompareVectorHashes : MonoBehaviour Fields _marginOfError Margin of error used to generate random vertex positions. The closer in value, the more stringent the test. Declaration protected float _marginOfError Field Value Type Description Single _numVerticesToTest Number of vertices to test with hashes. Declaration protected int _numVerticesToTest Field Value Type Description Int32 Methods CompareHashesAgainstEachOther() Test hashes against each other and log output. Declaration public void CompareHashesAgainstEachOther()"
  },
  "api/Oculus.Movement.Effects.CompareVectorHashesEditor.html": {
    "href": "api/Oculus.Movement.Effects.CompareVectorHashesEditor.html",
    "title": "Class CompareVectorHashesEditor | Unity-Movement Documentation",
    "keywords": "Class CompareVectorHashesEditor Custom editor class for comparing vector hashes. Inheritance Object CompareVectorHashesEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class CompareVectorHashesEditor : Editor Methods OnInspectorGUI() Defines the look of the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.DeformationLogic.ArmPositionInfo.html": {
    "href": "api/Oculus.Movement.Effects.DeformationLogic.ArmPositionInfo.html",
    "title": "Class DeformationLogic.ArmPositionInfo | Unity-Movement Documentation",
    "keywords": "Class DeformationLogic.ArmPositionInfo Contains information about the positioning of an arm. Inheritance Object DeformationLogic.ArmPositionInfo Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class ArmPositionInfo Fields _lowerArm The lower arm transform. Declaration protected Transform _lowerArm Field Value Type Description Transform _moveSpeed The speed of the arm move towards if enabled. Declaration protected float _moveSpeed Field Value Type Description Single _shoulder The shoulder transform. Declaration protected Transform _shoulder Field Value Type Description Transform _upperArm The upper arm transform. Declaration protected Transform _upperArm Field Value Type Description Transform _weight The weight of the offset position. Declaration protected float _weight Field Value Type Description Single Properties LowerArm The lower arm transform. Declaration public Transform LowerArm { get; } Property Value Type Description Transform MoveSpeed The speed of the move towards. Declaration public float MoveSpeed { get; } Property Value Type Description Single Shoulder The shoulder transform. Declaration public Transform Shoulder { get; } Property Value Type Description Transform UpperArm The upper arm transform. Declaration public Transform UpperArm { get; } Property Value Type Description Transform UpperArmPos The cached position of the upper arm. Declaration public Vector3 UpperArmPos { get; set; } Property Value Type Description Vector3 Weight The weight of the offset position. Declaration public float Weight { get; } Property Value Type Description Single"
  },
  "api/Oculus.Movement.Effects.DeformationLogic.BoneDistanceInfo.html": {
    "href": "api/Oculus.Movement.Effects.DeformationLogic.BoneDistanceInfo.html",
    "title": "Class DeformationLogic.BoneDistanceInfo | Unity-Movement Documentation",
    "keywords": "Class DeformationLogic.BoneDistanceInfo Contains information about the distance between two bone transforms. Inheritance Object DeformationLogic.BoneDistanceInfo Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class BoneDistanceInfo Fields EndBoneTransform The end bone transform. Declaration public Transform EndBoneTransform Field Value Type Description Transform StartBoneTransform The start bone transform. Declaration public Transform StartBoneTransform Field Value Type Description Transform Methods UpdateBonePosition(Boolean, Single) Updates the end bone transform position with the direction and distance added to the start bone transform position. Declaration public void UpdateBonePosition(bool useMoveTowards, float moveSpeed) Parameters Type Name Description Boolean useMoveTowards True if we should move towards the target position. Single moveSpeed The move towards speed. UpdateDirection() Updates the direction from the start to the end bone transform. Declaration public void UpdateDirection() UpdateDistance() Updates the distance between the start and end bone transforms. Declaration public void UpdateDistance()"
  },
  "api/Oculus.Movement.Effects.DeformationLogic.html": {
    "href": "api/Oculus.Movement.Effects.DeformationLogic.html",
    "title": "Class DeformationLogic | Unity-Movement Documentation",
    "keywords": "Class DeformationLogic Deforms the rig to preserve its original proportions after tracking output has been applied. Inheritance Object DeformationLogic Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class DeformationLogic : MonoBehaviour Fields _animator Animator component. Setting this will cause this script to ignore the skeleton field. Declaration protected Animator _animator Field Value Type Description Animator _correctSpineOnce Allows the spine correction to run only once, assuming the skeleton's positions don't get updated multiple times. Declaration protected bool _correctSpineOnce Field Value Type Description Boolean _fixArms Fix arms toggle. Declaration protected bool _fixArms Field Value Type Description Boolean _leftArmPositionInfo The position info for the left arm. Declaration protected DeformationLogic.ArmPositionInfo _leftArmPositionInfo Field Value Type Description DeformationLogic.ArmPositionInfo _moveTowardsArms If true, the arms will move towards the deformation target position. Declaration protected bool _moveTowardsArms Field Value Type Description Boolean _rightArmPositionInfo The position info for the right arm. Declaration protected DeformationLogic.ArmPositionInfo _rightArmPositionInfo Field Value Type Description DeformationLogic.ArmPositionInfo _skeleton The OVR Skeleton component. Declaration protected OVRCustomSkeleton _skeleton Field Value Type Description OVRCustomSkeleton _spineTranslationCorrectionType The type of spine translation correction that should be applied. If set to SkipHips, the spine translation correction offset will be applied to the head. If set to SkipHead, the spine translation correction offset will be applied to the hips. Declaration protected DeformationLogic.SpineTranslationCorrectionType _spineTranslationCorrectionType Field Value Type Description DeformationLogic.SpineTranslationCorrectionType Methods ApplyDeformation() Apply deformation logic if the component is enabled. Declaration public void ApplyDeformation()"
  },
  "api/Oculus.Movement.Effects.DeformationLogic.SpineTranslationCorrectionType.html": {
    "href": "api/Oculus.Movement.Effects.DeformationLogic.SpineTranslationCorrectionType.html",
    "title": "Enum DeformationLogic.SpineTranslationCorrectionType | Unity-Movement Documentation",
    "keywords": "Enum DeformationLogic.SpineTranslationCorrectionType The spine translation correction type. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax protected enum SpineTranslationCorrectionType Fields Name Description None SkipHead SkipHips SkipHipsAndHead"
  },
  "api/Oculus.Movement.Effects.DriveSkeletalLateUpdateLogic.html": {
    "href": "api/Oculus.Movement.Effects.DriveSkeletalLateUpdateLogic.html",
    "title": "Class DriveSkeletalLateUpdateLogic | Unity-Movement Documentation",
    "keywords": "Class DriveSkeletalLateUpdateLogic Run any advanced skeletal animation scripts and normal recalculation in LateUpdate after OVRSkeleton has updated the bones. Inheritance Object DriveSkeletalLateUpdateLogic Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class DriveSkeletalLateUpdateLogic : MonoBehaviour Fields _deformationLogics Deformation logic components to drive. Declaration protected DeformationLogic[] _deformationLogics Field Value Type Description DeformationLogic [] _groundings Grounding logic components to drive. Declaration protected GroundingLogic[] _groundings Field Value Type Description GroundingLogic [] _hipPinnings Hip pinning components to drive. Declaration protected HipPinningLogic[] _hipPinnings Field Value Type Description HipPinningLogic [] _recalculateNormals Normal recalculation components to drive. Declaration protected RecalculateNormals[] _recalculateNormals Field Value Type Description RecalculateNormals [] _twistDistributions Twist distribution components to drive. Declaration protected TwistDistribution[] _twistDistributions Field Value Type Description TwistDistribution []"
  },
  "api/Oculus.Movement.Effects.GroundingLogic.html": {
    "href": "api/Oculus.Movement.Effects.GroundingLogic.html",
    "title": "Class GroundingLogic | Unity-Movement Documentation",
    "keywords": "Class GroundingLogic Grounding logic to ground the lower body and procedurally animate its movement. Inheritance Object GroundingLogic Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class GroundingLogic : MonoBehaviour Fields _groundLayers The layers that the raycast will check against for grounding. Declaration protected LayerMask _groundLayers Field Value Type Description LayerMask _groundRaycastDist The maximum distance that the raycast will go when checking for grounding. Declaration protected float _groundRaycastDist Field Value Type Description Single _hipsTarget The hips target transform. Declaration protected Transform _hipsTarget Field Value Type Description Transform _leftLeg The leg properties for the left leg. Declaration protected GroundingLogic.LegProperties _leftLeg Field Value Type Description GroundingLogic.LegProperties _rightLeg The leg properties for the right leg. Declaration protected GroundingLogic.LegProperties _rightLeg Field Value Type Description GroundingLogic.LegProperties _skeleton The OVR Skeleton component. Declaration protected OVRCustomSkeleton _skeleton Field Value Type Description OVRCustomSkeleton Methods ApplyGrounding() Apply grounding logic. Declaration public void ApplyGrounding() Setup() Initializes the grounding logic properties. Declaration public void Setup()"
  },
  "api/Oculus.Movement.Effects.GroundingLogic.LegProperties.html": {
    "href": "api/Oculus.Movement.Effects.GroundingLogic.LegProperties.html",
    "title": "Class GroundingLogic.LegProperties | Unity-Movement Documentation",
    "keywords": "Class GroundingLogic.LegProperties Leg properties used for grounding logic. Inheritance Object GroundingLogic.LegProperties Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] protected class LegProperties Fields _floorOffset The height offset from the grounded floor to be applied to the foot. Declaration protected float _floorOffset Field Value Type Description Single _footHeightScaleOnDist The maximum distance for the step height to not be scaled. Declaration protected float _footHeightScaleOnDist Field Value Type Description Single _higherThresholdMoveProgress The upper bound of the move progress before the other foot can take a step. Declaration protected float _higherThresholdMoveProgress Field Value Type Description Single _ikSolver The two-bone IK solver. Declaration protected TwoBoneIK _ikSolver Field Value Type Description TwoBoneIK _initialRotationOffset The initial rotation offset for the feet. Declaration protected Vector3 _initialRotationOffset Field Value Type Description Vector3 _lowerThresholdMoveProgress The lower bound of the move progress before the other foot can take a step. Declaration protected float _lowerThresholdMoveProgress Field Value Type Description Single _stepCurve The animation curve for evaluating the step height value. Declaration protected AnimationCurve _stepCurve Field Value Type Description AnimationCurve _stepDist The distance before the step is triggered. Declaration protected float _stepDist Field Value Type Description Single _stepHeight The height of the step taken. Declaration protected float _stepHeight Field Value Type Description Single _stepSpeed The speed of the step for the foot. Declaration protected float _stepSpeed Field Value Type Description Single Properties FloorOffset The offset from the floor. Declaration public float FloorOffset { get; } Property Value Type Description Single FootTarget The foot target for the leg. Declaration public Transform FootTarget { get; } Property Value Type Description Transform IKSolver The two-bone IK solver. Declaration public TwoBoneIK IKSolver { get; } Property Value Type Description TwoBoneIK InitialFootRotation The initial rotation of the foot. Declaration public Quaternion InitialFootRotation { get; } Property Value Type Description Quaternion InitialLegPositionOffset The initial offset of the legs to the root. Declaration public Vector3 InitialLegPositionOffset { get; } Property Value Type Description Vector3 InitialLegRotationOffset The initial rotation offset of the legs to the root. Declaration public Quaternion InitialLegRotationOffset { get; } Property Value Type Description Quaternion KneeTarget The knee target for the leg. Declaration public Transform KneeTarget { get; } Property Value Type Description Transform LegTransform The leg upper transform. Declaration public Transform LegTransform { get; } Property Value Type Description Transform MoveProgress The current progress of the grounding movement. Declaration public float MoveProgress { get; set; } Property Value Type Description Single PrevFootPos The previous position for the foot. Declaration public Vector3 PrevFootPos { get; set; } Property Value Type Description Vector3 PrevKneePos The previous position for the knee. Declaration public Vector3 PrevKneePos { get; set; } Property Value Type Description Vector3 StepDist The distance before the step is triggered. Declaration public float StepDist { get; } Property Value Type Description Single StepSpeed The speed of the step for the foot. Declaration public float StepSpeed { get; } Property Value Type Description Single TargetFootPos The target position for the foot. Declaration public Vector3 TargetFootPos { get; set; } Property Value Type Description Vector3 Methods CanMoveOtherFoot() Returns true if the move progress is lower than the threshold move progress. Declaration public bool CanMoveOtherFoot() Returns Type Description Boolean True if the other foot can be moved. GenerateThresholdMoveProgress() Generates a new value for the threshold move progress. Declaration public void GenerateThresholdMoveProgress() IsMoving() Returns true if the move progress is less than 1. Declaration public bool IsMoving() Returns Type Description Boolean True if moving the foot. ScaledStepHeight(Single) Returns the step height scaled by how much distance is currently being covered. Declaration public float ScaledStepHeight(float dist) Parameters Type Name Description Single dist The distance to be traversed in the step. Returns Type Description Single The step height scaled by the distance to be traversed. Setup() Setup initial offsets from the skeleton bone information. Declaration public void Setup() StepCurveEvaluated(Single) Returns the step height percentage based on the progress of the grounding movement. Declaration public float StepCurveEvaluated(float moveProgress) Parameters Type Name Description Single moveProgress The current progress of the grounding movement. Returns Type Description Single The value of the step curve."
  },
  "api/Oculus.Movement.Effects.HipPinningCalibration.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningCalibration.html",
    "title": "Class HipPinningCalibration | Unity-Movement Documentation",
    "keywords": "Class HipPinningCalibration Setup for performing initial hip pinning calibration. Inheritance Object HipPinningCalibration Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HipPinningCalibration : MonoBehaviour Fields _calibrateMenu The game object that contains the renderers for this calibration menu. Declaration protected GameObject _calibrateMenu Field Value Type Description GameObject _mainChairProp The hip pinning target component for the main character. Declaration protected HipPinningTarget _mainChairProp Field Value Type Description HipPinningTarget _mainCharacterGrounding The grounding logic component for the main character. Declaration protected GroundingLogic _mainCharacterGrounding Field Value Type Description GroundingLogic _mainCharacterHipPinning The hip pinning logic component for the main character. Declaration protected HipPinningLogic _mainCharacterHipPinning Field Value Type Description HipPinningLogic _mainCharacterRenderer The game object that contains the mesh renderers for the main character. Declaration protected GameObject _mainCharacterRenderer Field Value Type Description GameObject _mirroredChairProp The hip pinning target component for the mirrored character. Declaration protected HipPinningTarget _mirroredChairProp Field Value Type Description HipPinningTarget _mirroredCharacterGrounding The grounding logic component for the mirrored character. Declaration protected GroundingLogic _mirroredCharacterGrounding Field Value Type Description GroundingLogic _mirroredCharacterHipPinning The hip pinning logic component for the mirrored character. Declaration protected HipPinningLogic _mirroredCharacterHipPinning Field Value Type Description HipPinningLogic _mirroredCharacterRenderer The game object that contains the mesh renderers for the mirrored character. Declaration protected GameObject _mirroredCharacterRenderer Field Value Type Description GameObject _skeleton The skeletal tracking data provider for the interface character. Declaration protected OVRCustomSkeleton _skeleton Field Value Type Description OVRCustomSkeleton Methods Calibrate() Calibrate the hip pinning target transform with the current tracked hip position Declaration public void Calibrate()"
  },
  "api/Oculus.Movement.Effects.HipPinningLogic.BodyJointProperties.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningLogic.BodyJointProperties.html",
    "title": "Class HipPinningLogic.BodyJointProperties | Unity-Movement Documentation",
    "keywords": "Class HipPinningLogic.BodyJointProperties Defines body joint properties. Inheritance Object HipPinningLogic.BodyJointProperties Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class BodyJointProperties Fields BodyJoint The body joint. Declaration public GameObject BodyJoint Field Value Type Description GameObject ConstraintWeight The positional constraint weight for this body joint. Declaration public float ConstraintWeight Field Value Type Description Single InitialLocalRotation The initial local rotation of the body joint. Declaration public Quaternion InitialLocalRotation Field Value Type Description Quaternion OffsetWeight The weight applied for the offsets applied by hip pinning. Declaration public float OffsetWeight Field Value Type Description Single PositionDistanceThreshold The distance before offsets stop getting applied to this body joint. Declaration public float PositionDistanceThreshold Field Value Type Description Single PositionDistanceWeight The weight of the constraint scaling with distance when offsets stop getting applied to this body joint. Declaration public float PositionDistanceWeight Field Value Type Description Single"
  },
  "api/Oculus.Movement.Effects.HipPinningLogic.HipPinningProperties.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningLogic.HipPinningProperties.html",
    "title": "Class HipPinningLogic.HipPinningProperties | Unity-Movement Documentation",
    "keywords": "Class HipPinningLogic.HipPinningProperties Defines hip pinning properties. Inheritance Object HipPinningLogic.HipPinningProperties Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class HipPinningProperties Fields BodyJointProperties All of the body joint properties for hip pinning. Declaration public List<HipPinningLogic.BodyJointProperties> BodyJointProperties Field Value Type Description List < HipPinningLogic.BodyJointProperties > PositionConstraints All of the position constraints for hip pinning. Declaration public List<PositionConstraint> PositionConstraints Field Value Type Description List < PositionConstraint > RotationLimits The rotation limits for this body. Declaration public float[] RotationLimits Field Value Type Description Single [] Properties HipBodyJointProperties The hips body joint properties. Declaration public HipPinningLogic.BodyJointProperties HipBodyJointProperties { get; } Property Value Type Description HipPinningLogic.BodyJointProperties Methods GetJointLocalRotationLimit(HipPinningLogic.BodyJointProperties, HipPinningLogic.HipPinningProperties.RotationLimit) Returns the joint local rotation limit for an axis. Declaration public float GetJointLocalRotationLimit(HipPinningLogic.BodyJointProperties bodyJointProperties, HipPinningLogic.HipPinningProperties.RotationLimit rotationLimit) Parameters Type Name Description HipPinningLogic.BodyJointProperties bodyJointProperties The body joint properties. HipPinningLogic.HipPinningProperties.RotationLimit rotationLimit The rotation limit axis. Returns Type Description Single The joint local rotation limit. SetPositionConstraintsActive(Boolean) Sets all of the position constraints active states for this body. Declaration public void SetPositionConstraintsActive(bool isActive) Parameters Type Name Description Boolean isActive If true, sets all positionalConstraint.constraintActive to true."
  },
  "api/Oculus.Movement.Effects.HipPinningLogic.HipPinningProperties.RotationLimit.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningLogic.HipPinningProperties.RotationLimit.html",
    "title": "Enum HipPinningLogic.HipPinningProperties.RotationLimit | Unity-Movement Documentation",
    "keywords": "Enum HipPinningLogic.HipPinningProperties.RotationLimit The rotation limit axis. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public enum RotationLimit Fields Name Description Count NegativeX NegativeY NegativeZ PositiveX PositiveY PositiveZ"
  },
  "api/Oculus.Movement.Effects.HipPinningLogic.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningLogic.html",
    "title": "Class HipPinningLogic | Unity-Movement Documentation",
    "keywords": "Class HipPinningLogic Hip pinning logic to pin an user's body to a point. Inheritance Object HipPinningLogic Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HipPinningLogic : MonoBehaviour Fields _dataProvider The tracking data provider. Declaration protected MonoBehaviour _dataProvider Field Value Type Description MonoBehaviour _enableApplyTransformations If true, the entire body will be transformed to undo the offset applied by the hip pinning position constraint. Declaration protected bool _enableApplyTransformations Field Value Type Description Boolean _enableConstrainedMovement If true, movement around the constrained surface will be enabled. Declaration protected bool _enableConstrainedMovement Field Value Type Description Boolean _enableHipPinningLeave If true, hip pinning will be disabled when the character leaves a certain range. Declaration protected bool _enableHipPinningLeave Field Value Type Description Boolean _enableLegRotation If true, leg rotation will be enabled. Declaration protected bool _enableLegRotation Field Value Type Description Boolean _enableLegRotationLimits If true, leg rotation limits will be enabled. Declaration protected bool _enableLegRotationLimits Field Value Type Description Boolean _hipPinningActive If true, hip pinning is currently active. Declaration protected bool _hipPinningActive Field Value Type Description Boolean _hipPinningLeaveRange The range from the hip pinning target before hip pinning is disabled. Declaration protected float _hipPinningLeaveRange Field Value Type Description Single _hipPinningProperties The hip pinning properties. Declaration protected HipPinningLogic.HipPinningProperties _hipPinningProperties Field Value Type Description HipPinningLogic.HipPinningProperties _hipPinningTargets The list of hip pinning targets in the scene. Declaration protected HipPinningTarget[] _hipPinningTargets Field Value Type Description HipPinningTarget [] _skeleton The OVR Skeleton component. Declaration protected OVRCustomSkeleton _skeleton Field Value Type Description OVRCustomSkeleton Properties EnableApplyTransformations If true, applies transformations to offset from the hip pinning target. Declaration public bool EnableApplyTransformations { get; set; } Property Value Type Description Boolean EnableConstrainedMovement If true, enables constrained movement around the hip pinning surface. Declaration public bool EnableConstrainedMovement { get; set; } Property Value Type Description Boolean EnableHipPinningLeave If true, enables leaving the hip pinning state when too far away from the hip pinning target. Declaration public bool EnableHipPinningLeave { get; set; } Property Value Type Description Boolean EnableLegRotation If true, enables leg rotation around the hips. Declaration public bool EnableLegRotation { get; set; } Property Value Type Description Boolean HipPinProperties Hip pinning properties. Declaration public HipPinningLogic.HipPinningProperties HipPinProperties { get; } Property Value Type Description HipPinningLogic.HipPinningProperties HipPinTarget The hip pinning target. Declaration public HipPinningTarget HipPinTarget { get; } Property Value Type Description HipPinningTarget Methods ApplyHipPinning() Apply hip pinning logic. Declaration public void ApplyHipPinning() AssignClosestHipPinningTarget(Vector3) Find and assign the closest hip pinning target to be the current hip pinning target. Declaration public void AssignClosestHipPinningTarget(Vector3 position) Parameters Type Name Description Vector3 position CalibrateInitialHipHeight(Vector3) Calibrates the height of the hip pinning target to match the character's height. Declaration public void CalibrateInitialHipHeight(Vector3 position) Parameters Type Name Description Vector3 position The position of the character's hips. InitializeHipPinning(HipPinningTarget) Initializes hip pinning position constraints based on the hip pinning target. Declaration public void InitializeHipPinning(HipPinningTarget hipPinningTarget) Parameters Type Name Description HipPinningTarget hipPinningTarget The hip pinning targe to initialize hip pinning for. SetHipPinningActive(Boolean) Sets the hip pinning state. Declaration public void SetHipPinningActive(bool isActive) Parameters Type Name Description Boolean isActive If true, hip pinning is enabled. Events OnEnterHipPinningArea Event when the user enters a hip pinning area. Declaration public event Action<HipPinningTarget> OnEnterHipPinningArea Event Type Type Description Action < HipPinningTarget > OnExitHipPinningArea Event when the user leaves a hip pinning area. Declaration public event Action<HipPinningTarget> OnExitHipPinningArea Event Type Type Description Action < HipPinningTarget >"
  },
  "api/Oculus.Movement.Effects.HipPinningLogicEditor.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningLogicEditor.html",
    "title": "Class HipPinningLogicEditor | Unity-Movement Documentation",
    "keywords": "Class HipPinningLogicEditor Editor class defining interface for HipPinningLogic. Inheritance Object HipPinningLogicEditor Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HipPinningLogicEditor : Editor Methods OnInspectorGUI() Defines the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Effects.HipPinningNotification.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningNotification.html",
    "title": "Class HipPinningNotification | Unity-Movement Documentation",
    "keywords": "Class HipPinningNotification Activates/deactivates this game object based on the hip pinning leave event. Inheritance Object HipPinningNotification Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HipPinningNotification : MonoBehaviour Fields _displayTime The amount of time that this notification should be enabled for. Declaration protected float _displayTime Field Value Type Description Single _hipPinningLogic The hip pinning logic component Declaration protected HipPinningLogic _hipPinningLogic Field Value Type Description HipPinningLogic"
  },
  "api/Oculus.Movement.Effects.HipPinningTarget.html": {
    "href": "api/Oculus.Movement.Effects.HipPinningTarget.html",
    "title": "Class HipPinningTarget | Unity-Movement Documentation",
    "keywords": "Class HipPinningTarget Specifies a target to be used for hip pinning. Inheritance Object HipPinningTarget Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class HipPinningTarget : MonoBehaviour Fields _chairCylinder The chair's cylinder transform. Declaration protected Transform _chairCylinder Field Value Type Description Transform _chairCylinderScaleMultiplier The chair's cylinder scale multiplier. Declaration protected float _chairCylinderScaleMultiplier Field Value Type Description Single _chairObject The game object containing the renderers for this hip pinning target. Declaration protected GameObject _chairObject Field Value Type Description GameObject _chairSeat The chair's seat transform. Declaration protected Transform _chairSeat Field Value Type Description Transform _constrainedArea The amount of constrained movement allowed from this hip pinning target. Declaration protected Vector3 _constrainedArea Field Value Type Description Vector3 _constrainedAreaOffset The offset to be applied to the center of where the constrained area will be. Declaration protected Vector3 _constrainedAreaOffset Field Value Type Description Vector3 _hipTargetTransform The transform that the character's hip is positionally constrained to. Declaration protected Transform _hipTargetTransform Field Value Type Description Transform _spineTargetTransforms The transforms that the character's spine bones are positionally constrained to. Declaration protected List<Transform> _spineTargetTransforms Field Value Type Description List < Transform > Properties ChairObject The chair object Declaration public GameObject ChairObject { get; } Property Value Type Description GameObject ChairSeatTransform The chair seat transform that the hip pinning target transform is parented to. Declaration public Transform ChairSeatTransform { get; } Property Value Type Description Transform HipTargetInitialRotationOffset Returns the initial local rotation offset of the hips target. Declaration public Quaternion HipTargetInitialRotationOffset { get; } Property Value Type Description Quaternion HipTargetTransform The hip pinning target transform that the hips will be constrained to. Declaration public Transform HipTargetTransform { get; } Property Value Type Description Transform SpineTargetTransforms The spine target transforms that the spine will be constrained to. Declaration public List<Transform> SpineTargetTransforms { get; } Property Value Type Description List < Transform > Methods ResetHipPinningTargetLocalPosition() Reset the local position of the hip pinning target transform to zero. Declaration public void ResetHipPinningTargetLocalPosition() UpdateHeight(Single) Update the height of the object that the hips will be constrained to. Declaration public void UpdateHeight(float heightAdjustment) Parameters Type Name Description Single heightAdjustment The height that this object will be adjusted to match. UpdateHipTargetTransform(Vector3) Update the position of the hip pinning target transform with its constrained position. Declaration public void UpdateHipTargetTransform(Vector3 trackedHipTranslation) Parameters Type Name Description Vector3 trackedHipTranslation The tracked hip translation."
  },
  "api/Oculus.Movement.Effects.html": {
    "href": "api/Oculus.Movement.Effects.html",
    "title": "Namespace Oculus.Movement.Effects | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Effects Classes CompareVectorHashes Generates a bunch of vertices that are close to each other. Compares how hash sets consolidate the two. One is based on Unity's generic Vector3 hash function while another is based on a fancier VertexKey structure. Unity's can be found here: https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Math/Vector3.cs#L229 CompareVectorHashesEditor Custom editor class for comparing vector hashes. DeformationLogic Deforms the rig to preserve its original proportions after tracking output has been applied. DeformationLogic.ArmPositionInfo Contains information about the positioning of an arm. DeformationLogic.BoneDistanceInfo Contains information about the distance between two bone transforms. DriveSkeletalLateUpdateLogic Run any advanced skeletal animation scripts and normal recalculation in LateUpdate after OVRSkeleton has updated the bones. GroundingLogic Grounding logic to ground the lower body and procedurally animate its movement. GroundingLogic.LegProperties Leg properties used for grounding logic. HipPinningCalibration Setup for performing initial hip pinning calibration. HipPinningLogic Hip pinning logic to pin an user's body to a point. HipPinningLogic.BodyJointProperties Defines body joint properties. HipPinningLogic.HipPinningProperties Defines hip pinning properties. HipPinningLogicEditor Editor class defining interface for HipPinningLogic. HipPinningNotification Activates/deactivates this game object based on the hip pinning leave event. HipPinningTarget Specifies a target to be used for hip pinning. MacroFacialExpressionDetector This rudimentary macro expression detector (macro being smile, etc). It is not meant to be robust or advanced. MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs State change event args for macro expression. MatrixUtils Convenient methods that extend the functionality of Matrix. MirrorSkeleton Mirrors a skeleton by copying its local transformation values. MirrorTransformation Applies mirror's transformation to an object that needs to be reflected. NormalRecalculator A utility class used to recalculate normals on the GPU or CPU, if the former can't do it. RecalculateNormals Uses original skinned mesh renderer to drive a skinned mesh renderer with recalculated normals. SmileEffect Reacts to smile detection by modifying the face material on the Aura asset. TransformMirroredEyes The root of the mirrored character will mirror the entire hierarchy. We just need to rely on the original eyes to rotate. If we copy their local transforms, the transforms of the root will effectively mirror the eyes properly into world space. TwistDistribution Twist distribution from a segment to a list of destination twist joints. TwistDistribution.TwistJoint Class structure for the twist joint. TwoBoneIK Two-bone IK solver - given a target joint, orient the upper/middle/lower joints to reach the target joint with the bend normal toward a pole transform. Structs VertexKey Class used to hash vertices reliably. CompareVectorHashes class is used to test its reliability against Unity's default hashing of vertices. Enums DeformationLogic.SpineTranslationCorrectionType The spine translation correction type. HipPinningLogic.HipPinningProperties.RotationLimit The rotation limit axis. MacroFacialExpressionDetector.MacroExpressionState States for macro expressions test for. MacroFacialExpressionDetector.MacroExpressionType A list of macro expressions to test against."
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.html",
    "title": "Class MacroFacialExpressionDetector | Unity-Movement Documentation",
    "keywords": "Class MacroFacialExpressionDetector This rudimentary macro expression detector (macro being smile, etc). It is not meant to be robust or advanced. Inheritance Object MacroFacialExpressionDetector Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MacroFacialExpressionDetector : MonoBehaviour Fields _ovrFaceExpressions OVRFaceExpressions component. Declaration protected OVRFaceExpressions _ovrFaceExpressions Field Value Type Description OVRFaceExpressions Events MacroExpressionStateChange Fires when expressions state changes. Declaration public event Action<MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs> MacroExpressionStateChange Event Type Type Description Action < MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs >"
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionState.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionState.html",
    "title": "Enum MacroFacialExpressionDetector.MacroExpressionState | Unity-Movement Documentation",
    "keywords": "Enum MacroFacialExpressionDetector.MacroExpressionState States for macro expressions test for. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public enum MacroExpressionState Fields Name Description Active Inactive Maintain"
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs.html",
    "title": "Class MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs | Unity-Movement Documentation",
    "keywords": "Class MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs State change event args for macro expression. Inheritance Object MacroFacialExpressionDetector.MacroExpressionStateChangeEventArgs Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MacroExpressionStateChangeEventArgs Constructors MacroExpressionStateChangeEventArgs(MacroFacialExpressionDetector.MacroExpressionType, MacroFacialExpressionDetector.MacroExpressionState, Single) Constructor for MacroExpressionStateChangeEventArgs. Declaration public MacroExpressionStateChangeEventArgs(MacroFacialExpressionDetector.MacroExpressionType expression, MacroFacialExpressionDetector.MacroExpressionState state, float minExpressionValue) Parameters Type Name Description MacroFacialExpressionDetector.MacroExpressionType expression Macro expression type associated with state change. MacroFacialExpressionDetector.MacroExpressionState state Current macro expression state. Single minExpressionValue Min value of blendshapes associated with macro expression. Fields Expression Macro expression type associated with state change. Declaration public readonly MacroFacialExpressionDetector.MacroExpressionType Expression Field Value Type Description MacroFacialExpressionDetector.MacroExpressionType MinExpressionValue Min value of blendshapes associated with macro expression. This \"floor\" gives an indication of how strong the macro expression is. Declaration public readonly float MinExpressionValue Field Value Type Description Single State Current macro expression state. Declaration public readonly MacroFacialExpressionDetector.MacroExpressionState State Field Value Type Description MacroFacialExpressionDetector.MacroExpressionState"
  },
  "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionType.html": {
    "href": "api/Oculus.Movement.Effects.MacroFacialExpressionDetector.MacroExpressionType.html",
    "title": "Enum MacroFacialExpressionDetector.MacroExpressionType | Unity-Movement Documentation",
    "keywords": "Enum MacroFacialExpressionDetector.MacroExpressionType A list of macro expressions to test against. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public enum MacroExpressionType Fields Name Description Angry Happy"
  },
  "api/Oculus.Movement.Effects.MatrixUtils.html": {
    "href": "api/Oculus.Movement.Effects.MatrixUtils.html",
    "title": "Class MatrixUtils | Unity-Movement Documentation",
    "keywords": "Class MatrixUtils Convenient methods that extend the functionality of Matrix. Inheritance Object MatrixUtils Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public static class MatrixUtils Methods GetPosition(Matrix4x4) Gets world-space position of matrix using last column of matrix. Declaration public static Vector3 GetPosition(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Vector3 World-space position. GetRotation(Matrix4x4) Gets world-space rotation of matrix. Uses forward and up vector to create a look rotation; right vector of matrix doesn't need to be used. Declaration public static Quaternion GetRotation(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Quaternion World-space quaternion. GetScale(Matrix4x4) Gets scale of matrix using right, up and forward vectors of matrix. Declaration public static Vector3 GetScale(this Matrix4x4 matrix) Parameters Type Name Description Matrix4x4 matrix Matrix to be evaluated. Returns Type Description Vector3 Matrix scale."
  },
  "api/Oculus.Movement.Effects.MirrorSkeleton.html": {
    "href": "api/Oculus.Movement.Effects.MirrorSkeleton.html",
    "title": "Class MirrorSkeleton | Unity-Movement Documentation",
    "keywords": "Class MirrorSkeleton Mirrors a skeleton by copying its local transformation values. Inheritance Object MirrorSkeleton Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MirrorSkeleton : MonoBehaviour"
  },
  "api/Oculus.Movement.Effects.MirrorTransformation.html": {
    "href": "api/Oculus.Movement.Effects.MirrorTransformation.html",
    "title": "Class MirrorTransformation | Unity-Movement Documentation",
    "keywords": "Class MirrorTransformation Applies mirror's transformation to an object that needs to be reflected. Inheritance Object MirrorTransformation Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class MirrorTransformation : MonoBehaviour Fields _mirrorNormal Mirror normal, perpendicular to mirror face. Declaration protected Vector3 _mirrorNormal Field Value Type Description Vector3 _mirrorPlaneOffset Allows mirror to be pushed into reflection plane somewhat, assuming mirror geometry has some thickness. Declaration protected float _mirrorPlaneOffset Field Value Type Description Single _transformToMirror Transform to be reflected. Declaration protected Transform _transformToMirror Field Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.NormalRecalculator.html": {
    "href": "api/Oculus.Movement.Effects.NormalRecalculator.html",
    "title": "Class NormalRecalculator | Unity-Movement Documentation",
    "keywords": "Class NormalRecalculator A utility class used to recalculate normals on the GPU or CPU, if the former can't do it. Inheritance Object NormalRecalculator Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class NormalRecalculator Methods CalculateNormals(Mesh) Custom normal calculation. The Unity Mesh.RecalculateNormals creates seams. See http://schemingdeveloper.com/2014/10/17/better-method-recalculate-normals-unity/ Declaration public void CalculateNormals(Mesh bakedMesh) Parameters Type Name Description Mesh bakedMesh Mesh to copy data from; feed into mesh that is rendered with recalculated normals. Initialize(Dictionary<Int32, List<Int32>>, HashSet<Int32>, Int32, Mesh, Material[]) Initialize data that the shader will use. This will involve flattening the dictionary argument. Declaration public void Initialize(Dictionary<int, List<int>> subMeshVertexIdToNeighborList, HashSet<int> subMeshVerticesSet, int vertexIdToTriangleMapCount, Mesh bakedBash, Material[] instantiatedMaterials) Parameters Type Name Description Dictionary < Int32 , List < Int32 >> subMeshVertexIdToNeighborList Vertex id to neighbor ids. HashSet < Int32 > subMeshVerticesSet Set of vertices in submesh. Int32 vertexIdToTriangleMapCount Total number of triangles counted. Mesh bakedBash Mesh snapshot obtained from original Material [] instantiatedMaterials Intantiated materials, used to feed structured buffers to. ReleaseResources() Cleans up resources used by shader for normal recalculation. Declaration public void ReleaseResources()"
  },
  "api/Oculus.Movement.Effects.RecalculateNormals.html": {
    "href": "api/Oculus.Movement.Effects.RecalculateNormals.html",
    "title": "Class RecalculateNormals | Unity-Movement Documentation",
    "keywords": "Class RecalculateNormals Uses original skinned mesh renderer to drive a skinned mesh renderer with recalculated normals. Inheritance Object RecalculateNormals Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class RecalculateNormals : MonoBehaviour Fields _duplicateLayerName The layer of the duplicate mesh with recalculate normals, should be on a visible layer. Declaration protected string _duplicateLayerName Field Value Type Description String _hiddenMeshLayerName The layer of original mesh with invalid normals, should be on invisible layer. Declaration protected string _hiddenMeshLayerName Field Value Type Description String _recalculateMaterialIndices Index of material that needs meta data for normal recalc, since that is ultimately done in the vertex stage. Declaration protected int[] _recalculateMaterialIndices Field Value Type Description Int32 [] _skinnedMeshRenderer Skinned mesh renderer requiring normal recalc. Declaration protected SkinnedMeshRenderer _skinnedMeshRenderer Field Value Type Description SkinnedMeshRenderer _subMesh Submesh index to recalc normals on. Sometimes a mesh might have submeshes that shouldn't need normal recalc, and for performance reasons only the sub mesh of interest should be the focus on this script. Declaration protected int _subMesh Field Value Type Description Int32 _useUnityFunction Allows using Unity's stock recalc instead. Declaration protected bool _useUnityFunction Field Value Type Description Boolean GeneratedDuplicateMesh Fired when duplicate mesh has been generated. Declaration public Action GeneratedDuplicateMesh Field Value Type Description Action Properties RunRecalculation Allows toggling this scripts functionality on or off. Declaration public bool RunRecalculation { get; set; } Property Value Type Description Boolean Methods ApplyNormalRecalculation() Applies normal recalculation to the skinned mesh renderer Declaration public void ApplyNormalRecalculation()"
  },
  "api/Oculus.Movement.Effects.SmileEffect.html": {
    "href": "api/Oculus.Movement.Effects.SmileEffect.html",
    "title": "Class SmileEffect | Unity-Movement Documentation",
    "keywords": "Class SmileEffect Reacts to smile detection by modifying the face material on the Aura asset. Inheritance Object SmileEffect Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class SmileEffect : MonoBehaviour Fields _facialExpressionDetector Facial expression detector to query events from. Declaration protected MacroFacialExpressionDetector _facialExpressionDetector Field Value Type Description MacroFacialExpressionDetector _glowCurve Glow curve that modulates emission strength on face. Declaration protected AnimationCurve _glowCurve Field Value Type Description AnimationCurve _materialIndex Material index to modify. Declaration protected int _materialIndex Field Value Type Description Int32 _renderer Renderer of the face. Declaration protected Renderer _renderer Field Value Type Description Renderer Properties SmileEnabled Returns the current state of if smile is enabled or disabled. Declaration public bool SmileEnabled { get; set; } Property Value Type Description Boolean"
  },
  "api/Oculus.Movement.Effects.TransformMirroredEyes.html": {
    "href": "api/Oculus.Movement.Effects.TransformMirroredEyes.html",
    "title": "Class TransformMirroredEyes | Unity-Movement Documentation",
    "keywords": "Class TransformMirroredEyes The root of the mirrored character will mirror the entire hierarchy. We just need to rely on the original eyes to rotate. If we copy their local transforms, the transforms of the root will effectively mirror the eyes properly into world space. Inheritance Object TransformMirroredEyes Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class TransformMirroredEyes : MonoBehaviour Fields _leftEyeMirrored The to-be-mirrored left eye. Declaration protected Transform _leftEyeMirrored Field Value Type Description Transform _leftEyeOriginal The original left eye that will be mirrored. Declaration protected Transform _leftEyeOriginal Field Value Type Description Transform _rightEyeMirrored The to-be-mirrored right eye. Declaration protected Transform _rightEyeMirrored Field Value Type Description Transform _rightEyeOriginal The original right eye that will be mirrored. Declaration protected Transform _rightEyeOriginal Field Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.TwistDistribution.html": {
    "href": "api/Oculus.Movement.Effects.TwistDistribution.html",
    "title": "Class TwistDistribution | Unity-Movement Documentation",
    "keywords": "Class TwistDistribution Twist distribution from a segment to a list of destination twist joints. Inheritance Object TwistDistribution Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class TwistDistribution : MonoBehaviour Fields _segmentEnd The target transform containing the twist (like a wrist). Declaration protected Transform _segmentEnd Field Value Type Description Transform _segmentEndUpTransform Optional. Assign a different transform to be used for the Segment End up vector. Declaration protected Transform _segmentEndUpTransform Field Value Type Description Transform _segmentStart The start transform on the opposite side of the twist source (like an elbow). Declaration protected Transform _segmentStart Field Value Type Description Transform _twistForwardAxis The forward axis for the twist joints, one that points along the twist axis toward segment end. Declaration protected Vector3 _twistForwardAxis Field Value Type Description Vector3 _twistJoints The list of twist joints to affect by the source transform's rotation. Declaration protected TwistDistribution.TwistJoint[] _twistJoints Field Value Type Description TwistDistribution.TwistJoint [] _twistUpAxis The up axis for the twist joints, one that matches the segment end up axis. Declaration protected Vector3 _twistUpAxis Field Value Type Description Vector3 _weight The global weight of the twist joints. Declaration protected float _weight Field Value Type Description Single Methods ApplyTwist() Apply twist distribution. Declaration public void ApplyTwist()"
  },
  "api/Oculus.Movement.Effects.TwistDistribution.TwistJoint.html": {
    "href": "api/Oculus.Movement.Effects.TwistDistribution.TwistJoint.html",
    "title": "Class TwistDistribution.TwistJoint | Unity-Movement Documentation",
    "keywords": "Class TwistDistribution.TwistJoint Class structure for the twist joint. Inheritance Object TwistDistribution.TwistJoint Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax [Serializable] public class TwistJoint Fields Joint The twist joint transform. Declaration public Transform Joint Field Value Type Description Transform RestQuaternion The rotation of the twist joint at rest. Declaration public Quaternion RestQuaternion Field Value Type Description Quaternion SegmentEndUpAxis The segment's up axis. Declaration public Vector3 SegmentEndUpAxis Field Value Type Description Vector3 Weight The weight of the source transform's rotation on the twist joint. Declaration public float Weight Field Value Type Description Single"
  },
  "api/Oculus.Movement.Effects.TwoBoneIK.html": {
    "href": "api/Oculus.Movement.Effects.TwoBoneIK.html",
    "title": "Class TwoBoneIK | Unity-Movement Documentation",
    "keywords": "Class TwoBoneIK Two-bone IK solver - given a target joint, orient the upper/middle/lower joints to reach the target joint with the bend normal toward a pole transform. Inheritance Object TwoBoneIK Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public class TwoBoneIK : MonoBehaviour Fields _lowerTransform The lower bone transform. Declaration protected Transform _lowerTransform Field Value Type Description Transform _middleTransform The middle bone transform. Declaration protected Transform _middleTransform Field Value Type Description Transform _poleTransform The pole transform. Declaration protected Transform _poleTransform Field Value Type Description Transform _targetPosOffset The target position offset. Declaration protected Vector3 _targetPosOffset Field Value Type Description Vector3 _targetRotOffset The target rotation offset. Declaration protected Vector3 _targetRotOffset Field Value Type Description Vector3 _targetTransform The target transform. Declaration protected Transform _targetTransform Field Value Type Description Transform _upperTransform The upper bone transform. Declaration protected Transform _upperTransform Field Value Type Description Transform Properties LowerTransform The lower bone transform. Declaration public Transform LowerTransform { get; } Property Value Type Description Transform MiddleTransform The middle bone transform. Declaration public Transform MiddleTransform { get; } Property Value Type Description Transform PoleTransform The pole transform. Declaration public Transform PoleTransform { get; } Property Value Type Description Transform TargetTransform The target transform. Declaration public Transform TargetTransform { get; } Property Value Type Description Transform UpperTransform The upper bone transform. Declaration public Transform UpperTransform { get; } Property Value Type Description Transform"
  },
  "api/Oculus.Movement.Effects.VertexKey.html": {
    "href": "api/Oculus.Movement.Effects.VertexKey.html",
    "title": "Struct VertexKey | Unity-Movement Documentation",
    "keywords": "Struct VertexKey Class used to hash vertices reliably. CompareVectorHashes class is used to test its reliability against Unity's default hashing of vertices. Namespace : Oculus.Movement.Effects Assembly : cs.temp.dll.dll Syntax public struct VertexKey Constructors VertexKey(Vector3) VertexKey constructor. Declaration public VertexKey(Vector3 position) Parameters Type Name Description Vector3 position Input position. Methods Equals(Object) Override for Equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Object to compare to. Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Override for getting hash code. Declaration public override int GetHashCode() Returns Type Description Int32 Hash code. Overrides ValueType.GetHashCode()"
  },
  "api/Oculus.Movement.Tracking.BlendshapeMapping.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeMapping.html",
    "title": "Class BlendshapeMapping | Unity-Movement Documentation",
    "keywords": "Class BlendshapeMapping Defines all supported blendshapes for face tracking. Inheritance Object BlendshapeMapping Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class BlendshapeMapping : MonoBehaviour Fields EyeLookBlendshapes List of supported eye look blendshapes. Declaration public static readonly OVRFaceExpressions.FaceExpression[] EyeLookBlendshapes Field Value Type Description OVRFaceExpressions.FaceExpression [] EyesClosedBlendshapes List of supported eye closed blendshapes. Declaration public static readonly OVRFaceExpressions.FaceExpression[] EyesClosedBlendshapes Field Value Type Description OVRFaceExpressions.FaceExpression [] LowerFaceBlendshapes List of supported lower face blendshapes. Declaration public static readonly OVRFaceExpressions.FaceExpression[] LowerFaceBlendshapes Field Value Type Description OVRFaceExpressions.FaceExpression [] Meshes List of all mesh mappings - supported blendshapes on meshes on this character. Declaration public List<BlendshapeMapping.MeshMapping> Meshes Field Value Type Description List < BlendshapeMapping.MeshMapping > UpperFaceBlendshapes List of supported upper face blendshapes. Declaration public static readonly OVRFaceExpressions.FaceExpression[] UpperFaceBlendshapes Field Value Type Description OVRFaceExpressions.FaceExpression []"
  },
  "api/Oculus.Movement.Tracking.BlendshapeMapping.MeshMapping.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeMapping.MeshMapping.html",
    "title": "Class BlendshapeMapping.MeshMapping | Unity-Movement Documentation",
    "keywords": "Class BlendshapeMapping.MeshMapping Defines possible blendshapes on a skinned mesh renderer. Inheritance Object BlendshapeMapping.MeshMapping Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class MeshMapping Fields Blendshapes List of all supported blendshapes on this skinned mesh renderer. Declaration public List<OVRFaceExpressions.FaceExpression> Blendshapes Field Value Type Description List < OVRFaceExpressions.FaceExpression > Mesh The skinned mesh renderer that has blendshapes. Declaration public SkinnedMeshRenderer Mesh Field Value Type Description SkinnedMeshRenderer"
  },
  "api/Oculus.Movement.Tracking.BlendshapeMappingEditor.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeMappingEditor.html",
    "title": "Class BlendshapeMappingEditor | Unity-Movement Documentation",
    "keywords": "Class BlendshapeMappingEditor Editor class defining interface for BlendshapeMapping. Inheritance Object BlendshapeMappingEditor Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class BlendshapeMappingEditor : Editor Methods AutoMap(BlendshapeMapping) Automatically maps recognized blendshapes from skinned mesh renderers to the specified blendshape mapping. Declaration public void AutoMap(BlendshapeMapping blendshapeMapping) Parameters Type Name Description BlendshapeMapping blendshapeMapping The blendshape mapping to automap. EnumForBlendshapeName(String) Returns the blendshape enum from a blendshape name string. Declaration public static OVRFaceExpressions.FaceExpression EnumForBlendshapeName(string blendshapeName) Parameters Type Name Description String blendshapeName The blendshape name as a string. Returns Type Description OVRFaceExpressions.FaceExpression The blendshape enum. OnInspectorGUI() Defines the look of the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Tracking.BlendshapeModifier.FaceExpressionModifier.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeModifier.FaceExpressionModifier.html",
    "title": "Class BlendshapeModifier.FaceExpressionModifier | Unity-Movement Documentation",
    "keywords": "Class BlendshapeModifier.FaceExpressionModifier The modifier data for a specific set of facial expressions. Inheritance Object BlendshapeModifier.FaceExpressionModifier Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class FaceExpressionModifier Fields FaceExpressions The facial expressions that will be modified. Declaration public OVRFaceExpressions.FaceExpression[] FaceExpressions Field Value Type Description OVRFaceExpressions.FaceExpression [] MaxValue The maximum clamped blendshape weight for this set of facial expressions. Declaration public float MaxValue Field Value Type Description Single MinValue The minimum clamped blendshape weight for this set of facial expressions. Declaration public float MinValue Field Value Type Description Single Multiplier The blendshape weight multiplier for this set of facial expressions. Declaration public float Multiplier Field Value Type Description Single"
  },
  "api/Oculus.Movement.Tracking.BlendshapeModifier.html": {
    "href": "api/Oculus.Movement.Tracking.BlendshapeModifier.html",
    "title": "Class BlendshapeModifier | Unity-Movement Documentation",
    "keywords": "Class BlendshapeModifier Calculates the modified blendshape weight for a facial expression. Inheritance Object BlendshapeModifier Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class BlendshapeModifier : MonoBehaviour Methods GetMaxValue(OVRFaceExpressions.FaceExpression) Returns the maximum clamped value for a facial expression. Declaration public float GetMaxValue(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression Returns Type Description Single Maximum clamped value for a facial expression. GetMinValue(OVRFaceExpressions.FaceExpression) Returns the minimum clamped value for a facial expression. Declaration public float GetMinValue(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Returns Type Description Single Minimum clamped value for a facial expression. GetModifiedWeight(OVRFaceExpressions.FaceExpression, Single) Returns the modified weight for a facial expression. Declaration public float GetModifiedWeight(OVRFaceExpressions.FaceExpression faceExpression, float currentWeight) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single currentWeight The unmodified weight of the facial expression. Returns Type Description Single GetMultiplierValue(OVRFaceExpressions.FaceExpression) Returns the multiplier value for a facial expression. Declaration public float GetMultiplierValue(OVRFaceExpressions.FaceExpression faceExpression) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Returns Type Description Single Multiplier modifier for a facial expression. LoadPreset(String) Loads the facial expression modifiers from text. Declaration public void LoadPreset(string presetJson) Parameters Type Name Description String presetJson The json containing the serialized facial expression modifiers. SavePreset() Saves the current facial expression modifiers to a timestamped json file. Declaration public void SavePreset() UpdateMaxValue(OVRFaceExpressions.FaceExpression, Single) Update the maximum clamped value for a facial expression. Declaration public void UpdateMaxValue(OVRFaceExpressions.FaceExpression faceExpression, float val) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single val The updated maximum value for the facial expression. UpdateMinValue(OVRFaceExpressions.FaceExpression, Single) Update the minimum clamped value for a facial expression. Declaration public void UpdateMinValue(OVRFaceExpressions.FaceExpression faceExpression, float val) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single val The updated minimum value for the facial expression. UpdateMultiplierValue(OVRFaceExpressions.FaceExpression, Single) Update the multiplier value for a facial expression. Declaration public void UpdateMultiplierValue(OVRFaceExpressions.FaceExpression faceExpression, float val) Parameters Type Name Description OVRFaceExpressions.FaceExpression faceExpression The facial expression. Single val The updated multiplier value for the facial expression."
  },
  "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.Combination.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.Combination.html",
    "title": "Class CorrectiveShapesDriver.Combination | Unity-Movement Documentation",
    "keywords": "Class CorrectiveShapesDriver.Combination Defines a combination target. Inheritance Object CorrectiveShapesDriver.Combination Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class Combination Fields drivenIndex The blendshape index to be driven on the skinned mesh renderer. Declaration public int drivenIndex Field Value Type Description Int32 driverIndices The blendshape indices used in calculating the blendshape weight for the driven index. Declaration public int[] driverIndices Field Value Type Description Int32 []"
  },
  "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.html",
    "title": "Class CorrectiveShapesDriver | Unity-Movement Documentation",
    "keywords": "Class CorrectiveShapesDriver Applies correctives to blendshapes based on a values obtained in a json file. The JSON loaded usually corresponds to a specific model. Inheritance Object CorrectiveShapesDriver Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class CorrectiveShapesDriver : MonoBehaviour Fields _combinationShapesTextAsset The json file containing the in-betweens and combinations data. Declaration protected TextAsset _combinationShapesTextAsset Field Value Type Description TextAsset _skinnedMeshRendererToCorrect The skinned mesh renderer that contains the blendshapes to be corrected. Declaration protected SkinnedMeshRenderer _skinnedMeshRendererToCorrect Field Value Type Description SkinnedMeshRenderer Methods ApplyCorrectives() Apply corrective blendshape weights to the skinned mesh renderer Declaration public void ApplyCorrectives()"
  },
  "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.InBetween.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.InBetween.html",
    "title": "Class CorrectiveShapesDriver.InBetween | Unity-Movement Documentation",
    "keywords": "Class CorrectiveShapesDriver.InBetween Defines an in-between. Inheritance Object CorrectiveShapesDriver.InBetween Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class InBetween Fields domainEnd The domain range end from the function curve of the in-between. Declaration public float domainEnd Field Value Type Description Single domainStart The domain range start from the function curve of the in-between. Declaration public float domainStart Field Value Type Description Single drivenIndex The blendshape index to be driven on the skinned mesh renderer. Declaration public int drivenIndex Field Value Type Description Int32 driverIndex The target blendshape index used for calculating the blendshape weight. Declaration public int driverIndex Field Value Type Description Int32 offset_x The x offset from the function curve of the in-between. Declaration public float offset_x Field Value Type Description Single offset_y The y offset from the function curve of the in-between. Declaration public float offset_y Field Value Type Description Single slope The slope from the function curve of the in-between. Declaration public float slope Field Value Type Description Single"
  },
  "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.RigLogicData.html": {
    "href": "api/Oculus.Movement.Tracking.CorrectiveShapesDriver.RigLogicData.html",
    "title": "Class CorrectiveShapesDriver.RigLogicData | Unity-Movement Documentation",
    "keywords": "Class CorrectiveShapesDriver.RigLogicData Defines in-betweens and combinations data. Inheritance Object CorrectiveShapesDriver.RigLogicData Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class RigLogicData Fields combinations Array of all of the combinations data. Declaration public CorrectiveShapesDriver.Combination[] combinations Field Value Type Description CorrectiveShapesDriver.Combination [] inBetweens Array of all of the in-betweens data. Declaration public CorrectiveShapesDriver.InBetween[] inBetweens Field Value Type Description CorrectiveShapesDriver.InBetween []"
  },
  "api/Oculus.Movement.Tracking.DriveThirdPartySkeleton.html": {
    "href": "api/Oculus.Movement.Tracking.DriveThirdPartySkeleton.html",
    "title": "Class DriveThirdPartySkeleton | Unity-Movement Documentation",
    "keywords": "Class DriveThirdPartySkeleton Drives a target, third-party skeleton using a source as a guide. Source is OVRSkeleton. Inheritance Object DriveThirdPartySkeleton Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class DriveThirdPartySkeleton : MonoBehaviour Fields _adjustments Adjustments to apply to certain bones that need to be fixed post-retargeting. Declaration protected DriveThirdPartySkeleton.JointAdjustment[] _adjustments Field Value Type Description DriveThirdPartySkeleton.JointAdjustment [] _animatorTargetSkeleton Animator on target character that needs to be driven. Keep disabled. Declaration protected Animator _animatorTargetSkeleton Field Value Type Description Animator _animatorTargetTPose Animator of target character in T-pose. Declaration protected Animator _animatorTargetTPose Field Value Type Description Animator _axisRendererSourcePrefab Axes debug prefab, source. Declaration protected GameObject _axisRendererSourcePrefab Field Value Type Description GameObject _axisRendererTargetPrefab Axes debug prefab, target. Declaration protected GameObject _axisRendererTargetPrefab Field Value Type Description GameObject _bodySectionsToAlign A list of body sections to align. While all bones should be driven, only a subset will have their axes aligned with source. Declaration protected BodySection[] _bodySectionsToAlign Field Value Type Description BodySection [] _bodySectionsToRenderDebugText Body sections to show debug text. Declaration protected BodySection[] _bodySectionsToRenderDebugText Field Value Type Description BodySection [] _bodySectionToPosition A list of body sections to fix the position of by matching against the body tracking rig. The other bones can be fixed via IK. Declaration protected BodySection[] _bodySectionToPosition Field Value Type Description BodySection [] _boneGizmosSource Allow visualization of gizmos for certain bones for source. Declaration protected HumanBodyBones[] _boneGizmosSource Field Value Type Description HumanBodyBones [] _boneGizmosTarget Allow visualization of gizmos for certain bones for target. Declaration protected HumanBodyBones[] _boneGizmosTarget Field Value Type Description HumanBodyBones [] _boneGizmosTPoseSource Allow visualization of gizmos for certain bones for source T-pose. Declaration protected HumanBodyBones[] _boneGizmosTPoseSource Field Value Type Description HumanBodyBones [] _boneGizmosTPoseTarget Allow visualization of gizmos for certain bones for target T-pose. Declaration protected HumanBodyBones[] _boneGizmosTPoseTarget Field Value Type Description HumanBodyBones [] _jointRendererSourcePrefab Joint renderer prefab used for source. Declaration protected GameObject _jointRendererSourcePrefab Field Value Type Description GameObject _jointRendererTargetPrefab Joint renderer prefab used for target. Declaration protected GameObject _jointRendererTargetPrefab Field Value Type Description GameObject _lineRendererSourcePrefab Line renderer of source prefab, allows visual debugging in game view. Declaration protected GameObject _lineRendererSourcePrefab Field Value Type Description GameObject _lineRendererTargetPrefab Line renderer of target prefab, allows visual debugging in game view. Declaration protected GameObject _lineRendererTargetPrefab Field Value Type Description GameObject _ovrSkeleton OVRSkeleton component to query bind pose and bone values from. Declaration protected OVRSkeleton _ovrSkeleton Field Value Type Description OVRSkeleton _showDebugAxes Show or hide debug axes. Declaration protected bool _showDebugAxes Field Value Type Description Boolean _showSkeletalDebugViews Show or hide skeletal debug views. Declaration protected bool _showSkeletalDebugViews Field Value Type Description Boolean _targetRenderer Renderer of target character. Declaration protected Renderer _targetRenderer Field Value Type Description Renderer Properties UpdatePositions Declaration protected bool UpdatePositions { get; } Property Value Type Description Boolean Methods ToggleDebugAxes() Toggles the ability to see debug axes. Declaration public void ToggleDebugAxes() ToggleSkeletalDebugViews() Toggles the ability to see skeletal debugging. Declaration public void ToggleSkeletalDebugViews() ToggleUpdatePositions() Toggles the ability of this script to update positions or not. Declaration public void ToggleUpdatePositions()"
  },
  "api/Oculus.Movement.Tracking.DriveThirdPartySkeleton.JointAdjustment.html": {
    "href": "api/Oculus.Movement.Tracking.DriveThirdPartySkeleton.JointAdjustment.html",
    "title": "Class DriveThirdPartySkeleton.JointAdjustment | Unity-Movement Documentation",
    "keywords": "Class DriveThirdPartySkeleton.JointAdjustment Adjustments to apply per-joint. Inheritance Object DriveThirdPartySkeleton.JointAdjustment Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax [Serializable] public class JointAdjustment Constructors JointAdjustment() Declaration public JointAdjustment() Fields BoneIdOverrideValue Allows mapping this human body bone to OVRSkeleton bone different from the standard. An ignore value indicates to not override; remove means to exclude from retargeting. Cannot be changed at runtime. Declaration public BodyTrackingBoneId BoneIdOverrideValue Field Value Type Description BodyTrackingBoneId DisablePositionTransform Allows disable position transform on joint. Declaration public bool DisablePositionTransform Field Value Type Description Boolean DisableRotationTransform Allows disable rotational transform on joint. Declaration public bool DisableRotationTransform Field Value Type Description Boolean Joint Joint to adjust. Declaration public HumanBodyBones Joint Field Value Type Description HumanBodyBones JointDisplacement Amount to displace the joint, based on percentage of distance to the next joint. Declaration public float JointDisplacement Field Value Type Description Single RotationChange Rotation to apply to the joint, post-retargeting. Declaration public Quaternion RotationChange Field Value Type Description Quaternion"
  },
  "api/Oculus.Movement.Tracking.FaceTrackingSystem.html": {
    "href": "api/Oculus.Movement.Tracking.FaceTrackingSystem.html",
    "title": "Class FaceTrackingSystem | Unity-Movement Documentation",
    "keywords": "Class FaceTrackingSystem Updates the blendshapes and eyes on the face with tracking data. Inheritance Object FaceTrackingSystem Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class FaceTrackingSystem : MonoBehaviour Fields _blendShapeMapping Blendshape mapping component. Declaration protected BlendshapeMapping _blendShapeMapping Field Value Type Description BlendshapeMapping _blendshapeModifier Optional blendshape modifier component. Declaration protected BlendshapeModifier _blendshapeModifier Field Value Type Description BlendshapeModifier _correctiveShapesDriver Corrective shapes driver component. Declaration protected CorrectiveShapesDriver _correctiveShapesDriver Field Value Type Description CorrectiveShapesDriver _ovrFaceExpressions OVR face expressions component. Declaration protected OVRFaceExpressions _ovrFaceExpressions Field Value Type Description OVRFaceExpressions Properties CorrectivesEnabled If true, the corrective driver will run and apply correctives. Declaration public bool CorrectivesEnabled { get; set; } Property Value Type Description Boolean"
  },
  "api/Oculus.Movement.Tracking.html": {
    "href": "api/Oculus.Movement.Tracking.html",
    "title": "Namespace Oculus.Movement.Tracking | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Tracking Classes BlendshapeMapping Defines all supported blendshapes for face tracking. BlendshapeMapping.MeshMapping Defines possible blendshapes on a skinned mesh renderer. BlendshapeMappingEditor Editor class defining interface for BlendshapeMapping. BlendshapeModifier Calculates the modified blendshape weight for a facial expression. BlendshapeModifier.FaceExpressionModifier The modifier data for a specific set of facial expressions. CorrectiveShapesDriver Applies correctives to blendshapes based on a values obtained in a json file. The JSON loaded usually corresponds to a specific model. CorrectiveShapesDriver.Combination Defines a combination target. CorrectiveShapesDriver.InBetween Defines an in-between. CorrectiveShapesDriver.RigLogicData Defines in-betweens and combinations data. DriveThirdPartySkeleton Drives a target, third-party skeleton using a source as a guide. Source is OVRSkeleton. DriveThirdPartySkeleton.JointAdjustment Adjustments to apply per-joint. FaceTrackingSystem Updates the blendshapes and eyes on the face with tracking data. HumanBodyBonesMappings MeshMappingDrawer Editor class defining interface for the mesh mapping drawer showing blendshapes. SkeletonMetadata Skeleton meta data class, associated with each HumanyBodyBone enum. SkeletonMetadata.BoneData Data associated per bone. Enums HumanBodyBonesMappings.BodySection Corresponds to major sections of the body (left food, chest, etc). HumanBodyBonesMappings.BodyTrackingBoneId Body tracking bone IDs that should be exposed through the inspector. BoneId has enum values that map to the same integers, which would not work with a serialized field that expects unique integers. BodyTrackingBoneId is an enum that restricts BoneId to the values that we care about."
  },
  "api/Oculus.Movement.Tracking.HumanBodyBonesMappings.BodySection.html": {
    "href": "api/Oculus.Movement.Tracking.HumanBodyBonesMappings.BodySection.html",
    "title": "Enum HumanBodyBonesMappings.BodySection | Unity-Movement Documentation",
    "keywords": "Enum HumanBodyBonesMappings.BodySection Corresponds to major sections of the body (left food, chest, etc). Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public enum BodySection Fields Name Description Back Head Hips LeftArm LeftFoot LeftHand LeftLeg Neck RightArm RightFoot RightHand RightLeg"
  },
  "api/Oculus.Movement.Tracking.HumanBodyBonesMappings.BodyTrackingBoneId.html": {
    "href": "api/Oculus.Movement.Tracking.HumanBodyBonesMappings.BodyTrackingBoneId.html",
    "title": "Enum HumanBodyBonesMappings.BodyTrackingBoneId | Unity-Movement Documentation",
    "keywords": "Enum HumanBodyBonesMappings.BodyTrackingBoneId Body tracking bone IDs that should be exposed through the inspector. BoneId has enum values that map to the same integers, which would not work with a serialized field that expects unique integers. BodyTrackingBoneId is an enum that restricts BoneId to the values that we care about. Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public enum BodyTrackingBoneId Fields Name Description Body_Chest Body_End Body_Head Body_Hips Body_LeftArmLower Body_LeftArmUpper Body_LeftHandIndexDistal Body_LeftHandIndexIntermediate Body_LeftHandIndexMetacarpal Body_LeftHandIndexProximal Body_LeftHandIndexTip Body_LeftHandLittleDistal Body_LeftHandLittleIntermediate Body_LeftHandLittleMetacarpal Body_LeftHandLittleProximal Body_LeftHandLittleTip Body_LeftHandMiddleDistal Body_LeftHandMiddleIntermediate Body_LeftHandMiddleMetacarpal Body_LeftHandMiddleProximal Body_LeftHandMiddleTip Body_LeftHandPalm Body_LeftHandRingDistal Body_LeftHandRingIntermediate Body_LeftHandRingMetacarpal Body_LeftHandRingProximal Body_LeftHandRingTip Body_LeftHandThumbDistal Body_LeftHandThumbMetacarpal Body_LeftHandThumbProximal Body_LeftHandThumbTip Body_LeftHandWrist Body_LeftHandWristTwist Body_LeftScapula Body_LeftShoulder Body_Neck Body_RightArmLower Body_RightArmUpper Body_RightHandIndexDistal Body_RightHandIndexIntermediate Body_RightHandIndexMetacarpal Body_RightHandIndexProximal Body_RightHandIndexTip Body_RightHandLittleDistal Body_RightHandLittleIntermediate Body_RightHandLittleMetacarpal Body_RightHandLittleProximal Body_RightHandLittleTip Body_RightHandMiddleDistal Body_RightHandMiddleIntermediate Body_RightHandMiddleMetacarpal Body_RightHandMiddleProximal Body_RightHandMiddleTip Body_RightHandPalm Body_RightHandRingDistal Body_RightHandRingIntermediate Body_RightHandRingMetacarpal Body_RightHandRingProximal Body_RightHandRingTip Body_RightHandThumbDistal Body_RightHandThumbMetacarpal Body_RightHandThumbProximal Body_RightHandThumbTip Body_RightHandWrist Body_RightHandWristTwist Body_RightScapula Body_RightShoulder Body_Root Body_SpineLower Body_SpineMiddle Body_SpineUpper Body_Start NoOverride Remove"
  },
  "api/Oculus.Movement.Tracking.HumanBodyBonesMappings.html": {
    "href": "api/Oculus.Movement.Tracking.HumanBodyBonesMappings.html",
    "title": "Class HumanBodyBonesMappings | Unity-Movement Documentation",
    "keywords": "Class HumanBodyBonesMappings Inheritance Object HumanBodyBonesMappings Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class HumanBodyBonesMappings Fields BoneIdToHumanBodyBone Paired OVRSkeleton bones with human body bones. Declaration public static Dictionary<OVRSkeleton.BoneId, HumanBodyBones> BoneIdToHumanBodyBone Field Value Type Description Dictionary < OVRSkeleton.BoneId , HumanBodyBones > BoneIdToJointPair For each humanoid bone, create a pair that determines the pair of bones that create the joint pair. Used to create the \"axis\" of the bone. Declaration public static Dictionary<OVRSkeleton.BoneId, Tuple<OVRSkeleton.BoneId, OVRSkeleton.BoneId>> BoneIdToJointPair Field Value Type Description Dictionary < OVRSkeleton.BoneId , Tuple < OVRSkeleton.BoneId , OVRSkeleton.BoneId >> BoneToBodySection Paired human body bones with body sections. Declaration public static Dictionary<HumanBodyBones, HumanBodyBonesMappings.BodySection> BoneToBodySection Field Value Type Description Dictionary < HumanBodyBones , HumanBodyBonesMappings.BodySection > BoneToJointPair For each humanoid bone, create a pair that determines the pair of bones that create the joint pair. Used to create the \"axis\" of the bone. Declaration public static Dictionary<HumanBodyBones, Tuple<HumanBodyBones, HumanBodyBones>> BoneToJointPair Field Value Type Description Dictionary < HumanBodyBones , Tuple < HumanBodyBones , HumanBodyBones >>"
  },
  "api/Oculus.Movement.Tracking.MeshMappingDrawer.html": {
    "href": "api/Oculus.Movement.Tracking.MeshMappingDrawer.html",
    "title": "Class MeshMappingDrawer | Unity-Movement Documentation",
    "keywords": "Class MeshMappingDrawer Editor class defining interface for the mesh mapping drawer showing blendshapes. Inheritance Object MeshMappingDrawer Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class MeshMappingDrawer : PropertyDrawer Methods GetPropertyHeight(SerializedProperty, GUIContent) Gets the height of this drawer based on the number of blendshapes. Declaration public override float GetPropertyHeight(SerializedProperty property, GUIContent label) Parameters Type Name Description SerializedProperty property The property to calculate height for. GUIContent label The descriptive text/image of this property. Returns Type Description Single The property height needed. OnGUI(Rect, SerializedProperty, GUIContent) Defines the look of the drawer GUI. Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position The position of the drawer. SerializedProperty property The property that the drawer is displaying. GUIContent label The text/image of the drawer's property."
  },
  "api/Oculus.Movement.Tracking.SkeletonMetadata.BoneData.html": {
    "href": "api/Oculus.Movement.Tracking.SkeletonMetadata.BoneData.html",
    "title": "Class SkeletonMetadata.BoneData | Unity-Movement Documentation",
    "keywords": "Class SkeletonMetadata.BoneData Data associated per bone. Inheritance Object SkeletonMetadata.BoneData Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class BoneData Fields CorrectionQuaternion Offset quaternion, used for retargeting rotations. Declaration public Quaternion? CorrectionQuaternion Field Value Type Description Nullable < Quaternion > FromPosition From position for joint pair, for debugging. Declaration public Vector3 FromPosition Field Value Type Description Vector3 JointPairEnd End of joint pair. Declaration public Transform JointPairEnd Field Value Type Description Transform JointPairOrientation Orientation or rotation corresponding to joint pair. If multiplied by forward, produces a coordinate axis. Declaration public Quaternion JointPairOrientation Field Value Type Description Quaternion JointPairStart Start of joint pair (usually the original joint). Declaration public Transform JointPairStart Field Value Type Description Transform OriginalJoint Transform associated with joint. Declaration public Transform OriginalJoint Field Value Type Description Transform ParentTransform Parent transform of joint. This is defined in a special way for OVRSkeleton, so we have to cache it ahead of time. Declaration public Transform ParentTransform Field Value Type Description Transform ToPosition To position for joint pair, for debugging. Declaration public Vector3 ToPosition Field Value Type Description Vector3"
  },
  "api/Oculus.Movement.Tracking.SkeletonMetadata.html": {
    "href": "api/Oculus.Movement.Tracking.SkeletonMetadata.html",
    "title": "Class SkeletonMetadata | Unity-Movement Documentation",
    "keywords": "Class SkeletonMetadata Skeleton meta data class, associated with each HumanyBodyBone enum. Inheritance Object SkeletonMetadata Namespace : Oculus.Movement.Tracking Assembly : cs.temp.dll.dll Syntax public class SkeletonMetadata Constructors SkeletonMetadata(Animator) Main constructor. Declaration public SkeletonMetadata(Animator animator) Parameters Type Name Description Animator animator Animator to build meta data from. SkeletonMetadata(OVRSkeleton, Boolean) Constructor OVRSkeleton. Declaration public SkeletonMetadata(OVRSkeleton skeleton, bool useBindPose) Parameters Type Name Description OVRSkeleton skeleton Skeleton to build meta data from. Boolean useBindPose Whether to use bind pose (T-pose) or not. Properties BodyToBoneData Human body bone enum to bone data mapping. Declaration public Dictionary<HumanBodyBones, SkeletonMetadata.BoneData> BodyToBoneData { get; } Property Value Type Description Dictionary < HumanBodyBones , SkeletonMetadata.BoneData > Methods BuildBoneData(Animator) Builds body to bone data with an Animator. Declaration public void BuildBoneData(Animator animator) Parameters Type Name Description Animator animator BuildBoneDataSkeleton(OVRSkeleton, Boolean) Builds body to bone data with the OVRSkeleton. Declaration public void BuildBoneDataSkeleton(OVRSkeleton skeleton, bool useBindPose) Parameters Type Name Description OVRSkeleton skeleton The OVRSkeleton. Boolean useBindPose If true, use the bind pose. BuildCoordinateAxesForAllBones(Dictionary<HumanBodyBones, SkeletonMetadata.BoneData>) Builds coordinate axes for all bones. If a reference bone data collection has been passed in, use its coordinate system (per bone) as a reference for computation. Declaration public void BuildCoordinateAxesForAllBones(Dictionary<HumanBodyBones, SkeletonMetadata.BoneData> referenceBoneToData = null) Parameters Type Name Description Dictionary < HumanBodyBones , SkeletonMetadata.BoneData > referenceBoneToData PrintJointPairs() Log joint pairs. Declaration public void PrintJointPairs()"
  },
  "api/Oculus.Movement.UI.BlendshapesMenuToggle.html": {
    "href": "api/Oculus.Movement.UI.BlendshapesMenuToggle.html",
    "title": "Class BlendshapesMenuToggle | Unity-Movement Documentation",
    "keywords": "Class BlendshapesMenuToggle Turns blend shapes manus based on function call, usually hooked up via UI. Inheritance Object BlendshapesMenuToggle Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class BlendshapesMenuToggle : MonoBehaviour Methods ToggleBlendshapesMenuEnableState() Toggles blendshapes menus on and off. Called via UI in scene. Declaration public void ToggleBlendshapesMenuEnableState()"
  },
  "api/Oculus.Movement.UI.BlendshapesMenuVisual.html": {
    "href": "api/Oculus.Movement.UI.BlendshapesMenuVisual.html",
    "title": "Class BlendshapesMenuVisual | Unity-Movement Documentation",
    "keywords": "Class BlendshapesMenuVisual Renders face expressions via TMPPro. Filters ones that are too low. Inheritance Object BlendshapesMenuVisual Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class BlendshapesMenuVisual : MonoBehaviour"
  },
  "api/Oculus.Movement.UI.ButtonToggleIcon.html": {
    "href": "api/Oculus.Movement.UI.ButtonToggleIcon.html",
    "title": "Class ButtonToggleIcon | Unity-Movement Documentation",
    "keywords": "Class ButtonToggleIcon Allows usage of a button toggle icon. Inheritance Object ButtonToggleIcon Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class ButtonToggleIcon : MonoBehaviour Fields _deselectColor Deselected color. Declaration protected Color _deselectColor Field Value Type Description Color _selectColor Select color. Declaration protected Color _selectColor Field Value Type Description Color _toggleObject Object that indicates toggle state. Declaration protected GameObject _toggleObject Field Value Type Description GameObject Methods ToggleSelectIcon() Declaration public void ToggleSelectIcon()"
  },
  "api/Oculus.Movement.UI.HipPinningMenu.html": {
    "href": "api/Oculus.Movement.UI.HipPinningMenu.html",
    "title": "Class HipPinningMenu | Unity-Movement Documentation",
    "keywords": "Class HipPinningMenu Menu for toggling different options for hip pinning Inheritance Object HipPinningMenu Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class HipPinningMenu : MonoBehaviour Methods ToggleBodyPart(Int32) Toggle visibility of a body part for the hip pinned user Declaration public void ToggleBodyPart(int index) Parameters Type Name Description Int32 index ToggleHipPinning() Toggle hip pinning for the hip pinned user Declaration public void ToggleHipPinning() ToggleHipPinningDetection() Toggle hip pinning detection for the hip pinned user Declaration public void ToggleHipPinningDetection() ToggleHipPinningMenu() Toggle the visibility of the hip pinning options window Declaration public void ToggleHipPinningMenu() ToggleLegRotation() Toggle leg rotation for the hip pinned user Declaration public void ToggleLegRotation() ToggleMovement() Toggle constrained movement for the hip pinned user Declaration public void ToggleMovement() ToggleTransformation() Toggle transformation for the hip pinned user Declaration public void ToggleTransformation()"
  },
  "api/Oculus.Movement.UI.html": {
    "href": "api/Oculus.Movement.UI.html",
    "title": "Namespace Oculus.Movement.UI | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.UI Classes BlendshapesMenuToggle Turns blend shapes manus based on function call, usually hooked up via UI. BlendshapesMenuVisual Renders face expressions via TMPPro. Filters ones that are too low. ButtonToggleIcon Allows usage of a button toggle icon. HipPinningMenu Menu for toggling different options for hip pinning SceneSelectIcon Aligns scene selection icon based on current scene. SceneSelectIcon.IconPositionInformation Information about the icon position. ScriptEffectToggle Toggles component on/off. TogglesMenu Toggles features on and off."
  },
  "api/Oculus.Movement.UI.SceneSelectIcon.html": {
    "href": "api/Oculus.Movement.UI.SceneSelectIcon.html",
    "title": "Class SceneSelectIcon | Unity-Movement Documentation",
    "keywords": "Class SceneSelectIcon Aligns scene selection icon based on current scene. Inheritance Object SceneSelectIcon Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class SceneSelectIcon : MonoBehaviour Fields _iconInformationArray Icon positions array. Declaration protected SceneSelectIcon.IconPositionInformation[] _iconInformationArray Field Value Type Description SceneSelectIcon.IconPositionInformation [] _iconTransform Icon transform to affect. Declaration protected Transform _iconTransform Field Value Type Description Transform"
  },
  "api/Oculus.Movement.UI.SceneSelectIcon.IconPositionInformation.html": {
    "href": "api/Oculus.Movement.UI.SceneSelectIcon.IconPositionInformation.html",
    "title": "Class SceneSelectIcon.IconPositionInformation | Unity-Movement Documentation",
    "keywords": "Class SceneSelectIcon.IconPositionInformation Information about the icon position. Inheritance Object SceneSelectIcon.IconPositionInformation Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax [Serializable] protected class IconPositionInformation Fields LocalPosition Local position to set. Declaration public Vector3 LocalPosition Field Value Type Description Vector3 SceneName Scene name to check for. Declaration public string SceneName Field Value Type Description String"
  },
  "api/Oculus.Movement.UI.ScriptEffectToggle.html": {
    "href": "api/Oculus.Movement.UI.ScriptEffectToggle.html",
    "title": "Class ScriptEffectToggle | Unity-Movement Documentation",
    "keywords": "Class ScriptEffectToggle Toggles component on/off. Inheritance Object ScriptEffectToggle Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class ScriptEffectToggle : MonoBehaviour Fields _componentToToggle The component to be toggled. Declaration protected SmileEffect _componentToToggle Field Value Type Description SmileEffect _featureString The feature text. Declaration protected string _featureString Field Value Type Description String _textToUpdate The text component to be updated when the component is toggled. Declaration protected TMPro.TextMeshPro _textToUpdate Field Value Type Description TMPro.TextMeshPro Methods Toggle() Toggles the component on/off. Declaration public void Toggle()"
  },
  "api/Oculus.Movement.UI.TogglesMenu.html": {
    "href": "api/Oculus.Movement.UI.TogglesMenu.html",
    "title": "Class TogglesMenu | Unity-Movement Documentation",
    "keywords": "Class TogglesMenu Toggles features on and off. Inheritance Object TogglesMenu Namespace : Oculus.Movement.UI Assembly : cs.temp.dll.dll Syntax public class TogglesMenu : MonoBehaviour Methods ToggleCorrectives() Toggles correctives on and off. Declaration public void ToggleCorrectives() ToggleDeformation() Toggles deformation on and off. Declaration public void ToggleDeformation() ToggleNormalRecalc() Toggles normal recalculation on and off. Declaration public void ToggleNormalRecalc() ToggleTwist() Toggles twist on and off. Declaration public void ToggleTwist()"
  },
  "api/Oculus.Movement.Utils.html": {
    "href": "api/Oculus.Movement.Utils.html",
    "title": "Namespace Oculus.Movement.Utils | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Utils Classes RequestMicrophonePermissions Request microphone permissions to be used as a fallback for OVRFaceExpression blendshapes when face tracking permissions aren't enabled, or if the face is obscured. ScreenshotFaceExpressions Take screenshots of the specified blendshape mapping. ScreenshotFaceExpressionsEditor Editor class defining interface for screenshot face expressions."
  },
  "api/Oculus.Movement.Utils.RequestMicrophonePermissions.html": {
    "href": "api/Oculus.Movement.Utils.RequestMicrophonePermissions.html",
    "title": "Class RequestMicrophonePermissions | Unity-Movement Documentation",
    "keywords": "Class RequestMicrophonePermissions Request microphone permissions to be used as a fallback for OVRFaceExpression blendshapes when face tracking permissions aren't enabled, or if the face is obscured. Inheritance Object RequestMicrophonePermissions Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class RequestMicrophonePermissions : MonoBehaviour"
  },
  "api/Oculus.Movement.Utils.ScreenshotFaceExpressions.html": {
    "href": "api/Oculus.Movement.Utils.ScreenshotFaceExpressions.html",
    "title": "Class ScreenshotFaceExpressions | Unity-Movement Documentation",
    "keywords": "Class ScreenshotFaceExpressions Take screenshots of the specified blendshape mapping. Inheritance Object ScreenshotFaceExpressions Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ScreenshotFaceExpressions : MonoBehaviour Fields _camera The camera which its viewport will be used to take the screenshot. Declaration protected Camera _camera Field Value Type Description Camera _correctives The target corrective shapes driver. Declaration protected CorrectiveShapesDriver _correctives Field Value Type Description CorrectiveShapesDriver _mapping The target blendshape mapping. Declaration protected BlendshapeMapping _mapping Field Value Type Description BlendshapeMapping _screenshotFolder The path to the screenshots folder. Declaration protected string _screenshotFolder Field Value Type Description String _screenshotHeight The height of the screenshot texture. Declaration protected int _screenshotHeight Field Value Type Description Int32 _screenshotNeutral If true, take a screenshot of the viewport without any blendshapes. Declaration protected bool _screenshotNeutral Field Value Type Description Boolean _screenshotWidth The width of the screenshot texture. Declaration protected int _screenshotWidth Field Value Type Description Int32 Methods StartTakingBlendshapeScreenshots() Start the coroutine to take screenshots of all of the blendshapes. Declaration public void StartTakingBlendshapeScreenshots()"
  },
  "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsEditor.html": {
    "href": "api/Oculus.Movement.Utils.ScreenshotFaceExpressionsEditor.html",
    "title": "Class ScreenshotFaceExpressionsEditor | Unity-Movement Documentation",
    "keywords": "Class ScreenshotFaceExpressionsEditor Editor class defining interface for screenshot face expressions. Inheritance Object ScreenshotFaceExpressionsEditor Namespace : Oculus.Movement.Utils Assembly : cs.temp.dll.dll Syntax public class ScreenshotFaceExpressionsEditor : Editor Methods OnInspectorGUI() Defines the look of the script's GUI. Declaration public override void OnInspectorGUI()"
  },
  "api/Oculus.Movement.Validation.html": {
    "href": "api/Oculus.Movement.Validation.html",
    "title": "Namespace Oculus.Movement.Validation | Unity-Movement Documentation",
    "keywords": "Namespace Oculus.Movement.Validation Classes LayerAndVulkanValidation Identify if layers are missing and identify incorrect graphics API. RuntimeUnitValidation For managing Unit Tests in Unity at runtime, for sample scenes and debugging/diagnostics. LayerAndVulkanValidation is an example implementation of this base class. RuntimeUnitValidation.TestCase RuntimeUnitValidation.TestEvent When the result of a test is known, the given callback will be called. If the test algorithm fails, the callback may never be called. UrpShaderValidation Enables or disables the URP shader keyword to prevent shader compilation errors when the URP package is missing from the project. Delegates RuntimeUnitValidation.TestResultHandler Template for a function to be called when the results of a test are known."
  },
  "api/Oculus.Movement.Validation.LayerAndVulkanValidation.html": {
    "href": "api/Oculus.Movement.Validation.LayerAndVulkanValidation.html",
    "title": "Class LayerAndVulkanValidation | Unity-Movement Documentation",
    "keywords": "Class LayerAndVulkanValidation Identify if layers are missing and identify incorrect graphics API. Inheritance Object RuntimeUnitValidation LayerAndVulkanValidation Inherited Members RuntimeUnitValidation._testCases RuntimeUnitValidation.TestCases RuntimeUnitValidation.Start() Namespace : Oculus.Movement.Validation Assembly : cs.temp.dll.dll Syntax public class LayerAndVulkanValidation : RuntimeUnitValidation Fields _expectedLayers Layers expected in scene. Declaration protected string[] _expectedLayers Field Value Type Description String [] Methods Test() Will show test output object before tests; allows the test UI to be hidden at edit time. Declaration public override void Test() Overrides RuntimeUnitValidation.Test() TestLayers(RuntimeUnitValidation.TestResultHandler) The Movement scene has a few layers required for rendering (or not-rendering) objects. Declaration public void TestLayers(RuntimeUnitValidation.TestResultHandler layersFoundCallback) Parameters Type Name Description RuntimeUnitValidation.TestResultHandler layersFoundCallback TestVulkan(RuntimeUnitValidation.TestResultHandler) URP shaders and materials are only expected to work with the Vulkan graphics API. OpenGLES3 (default rendering) should work too, as should DirectX11 (Unity Editor). Declaration public void TestVulkan(RuntimeUnitValidation.TestResultHandler vulkanFoundCallback) Parameters Type Name Description RuntimeUnitValidation.TestResultHandler vulkanFoundCallback Handler called when result is known."
  },
  "api/Oculus.Movement.Validation.RuntimeUnitValidation.html": {
    "href": "api/Oculus.Movement.Validation.RuntimeUnitValidation.html",
    "title": "Class RuntimeUnitValidation | Unity-Movement Documentation",
    "keywords": "Class RuntimeUnitValidation For managing Unit Tests in Unity at runtime, for sample scenes and debugging/diagnostics. LayerAndVulkanValidation is an example implementation of this base class. Inheritance Object RuntimeUnitValidation LayerAndVulkanValidation Namespace : Oculus.Movement.Validation Assembly : cs.temp.dll.dll Syntax public class RuntimeUnitValidation : MonoBehaviour Fields _testCases List of TestCases, which are functions that call a given result bool callback. Declaration protected List<RuntimeUnitValidation.TestCase> _testCases Field Value Type Description List < RuntimeUnitValidation.TestCase > Properties TestCases All test cases, where each test case accepts a void method(bool) delegate to invoke once a test is complete with a success/failure result known. Declaration public List<RuntimeUnitValidation.TestCase> TestCases { get; set; } Property Value Type Description List < RuntimeUnitValidation.TestCase > Methods Start() Automatically run this test when this object starts in the scene. Declaration public virtual void Start() Test() Calls RuntimeUnitValidation.TestCase s, based on Test evaluation, calls OnTrue or OnFalse . Declaration public virtual void Test()"
  },
  "api/Oculus.Movement.Validation.RuntimeUnitValidation.TestCase.html": {
    "href": "api/Oculus.Movement.Validation.RuntimeUnitValidation.TestCase.html",
    "title": "Class RuntimeUnitValidation.TestCase | Unity-Movement Documentation",
    "keywords": "Class RuntimeUnitValidation.TestCase Inheritance Object RuntimeUnitValidation.TestCase Namespace : Oculus.Movement.Validation Assembly : cs.temp.dll.dll Syntax [Serializable] public class TestCase Constructors TestCase(Object, String) Creates a validation test unit. Declaration public TestCase(object target, string testName) Parameters Type Name Description Object target Object with a RuntimeUnitValidation.TestResultHandler . String testName Name of the RuntimeUnitValidation.TestResultHandler . Fields Name Metadata describing the test. Declaration public string Name Field Value Type Description String OnFalse Unity Editor can insert a response here to a false case from the test. Declaration public UnityEvent OnFalse Field Value Type Description UnityEvent OnTrue Unity Editor can insert a response here to a true case from the test. Declaration public UnityEvent OnTrue Field Value Type Description UnityEvent Test Function that accepts a bool callback, giving it the test result. Declaration public RuntimeUnitValidation.TestEvent Test Field Value Type Description RuntimeUnitValidation.TestEvent Methods Evaluate(RuntimeUnitValidation.TestResultHandler) Runs the test, then calls OnTrue or OnFalse . Declaration public void Evaluate(RuntimeUnitValidation.TestResultHandler action) Parameters Type Name Description RuntimeUnitValidation.TestResultHandler action An additional result callback to use, null is fine. OnResultKnown(Boolean) Called when the result of the test is known. Declaration protected void OnResultKnown(bool result) Parameters Type Name Description Boolean result Result of the test."
  },
  "api/Oculus.Movement.Validation.RuntimeUnitValidation.TestEvent.html": {
    "href": "api/Oculus.Movement.Validation.RuntimeUnitValidation.TestEvent.html",
    "title": "Class RuntimeUnitValidation.TestEvent | Unity-Movement Documentation",
    "keywords": "Class RuntimeUnitValidation.TestEvent When the result of a test is known, the given callback will be called. If the test algorithm fails, the callback may never be called. Inheritance Object RuntimeUnitValidation.TestEvent Namespace : Oculus.Movement.Validation Assembly : cs.temp.dll.dll Syntax [Serializable] public class TestEvent : UnityEvent<RuntimeUnitValidation.TestResultHandler>"
  },
  "api/Oculus.Movement.Validation.RuntimeUnitValidation.TestResultHandler.html": {
    "href": "api/Oculus.Movement.Validation.RuntimeUnitValidation.TestResultHandler.html",
    "title": "Delegate RuntimeUnitValidation.TestResultHandler | Unity-Movement Documentation",
    "keywords": "Delegate RuntimeUnitValidation.TestResultHandler Template for a function to be called when the results of a test are known. Namespace : Oculus.Movement.Validation Assembly : cs.temp.dll.dll Syntax public delegate void TestResultHandler(bool testResult); Parameters Type Name Description Boolean testResult if the test passed (true) or failed (false)."
  },
  "api/Oculus.Movement.Validation.UrpShaderValidation.html": {
    "href": "api/Oculus.Movement.Validation.UrpShaderValidation.html",
    "title": "Class UrpShaderValidation | Unity-Movement Documentation",
    "keywords": "Class UrpShaderValidation Enables or disables the URP shader keyword to prevent shader compilation errors when the URP package is missing from the project. Inheritance Object UrpShaderValidation Namespace : Oculus.Movement.Validation Assembly : cs.temp.dll.dll Syntax public static class UrpShaderValidation Methods SetUrpShaderKeyword() Enables or disables URP package includes by checking if the project has URP enabled. Declaration public static void SetUrpShaderKeyword()"
  },
  "index.html": {
    "href": "index.html",
    "title": "Unity-Movement | Unity-Movement Documentation",
    "keywords": "Unity-Movement Unity-Movement is a package that uses OpenXR’s tracking layer APIs to expose Meta Quest Pro’s Body Tracking (BT), Eye Tracking (ET), and Face Tracking (FT) capabilities. With this package, developers can leverage tracking to populate VR environments with custom avatars that bring the expressiveness of users into the virtual environments that they create. Requirements Unity 2020.3.34f1 (2020 LTS) or newer installed v46.0 or newer of the Oculus Integration SDK with OVRPlugin set to use OpenXR as backend A project set up with these configuration settings Licenses The Unity-Movement package is released under the Oculus License . The MIT License applies to only certain, clearly marked documents. If an individual file does not indicate which license it is subject to, then the Oculus License applies. Getting Started First, ensure that all of the requirements are met. Then, bring this package into the project. In Package Manager, click on the add button below the window title and select Add package from git URL… , using this URL: https://github.com/oculus-samples/Unity-Movement.git Alternatively, in package manager, click on the add button below the window title and select Add package from disk... , using the package.json located after unzipping one of the releases here: https://github.com/oculus-samples/Unity-Movement/releases The sample scenes are located under the Samples/../Scenes folders. Samples The project contains several sample scenes. More information about the samples can be found here . Documentation The documentation for this package can be found here . The API reference for this package can be found here ."
  },
  "manual/overview.html": {
    "href": "manual/overview.html",
    "title": "Overview | Unity-Movement Documentation",
    "keywords": "Overview The overview for this package can be found here ."
  },
  "manual/samples.html": {
    "href": "manual/samples.html",
    "title": "Samples | Unity-Movement Documentation",
    "keywords": "Samples The documentation for the samples in this package can be found here ."
  }
}